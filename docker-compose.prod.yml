version: '3.8'

services:
  # Production Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      N8N_BASE_URL: ${N8N_BASE_URL:-http://n8n:5678}
      N8N_WEBHOOK_NEW_TICKET: ${N8N_WEBHOOK_NEW_TICKET}
      N8N_WEBHOOK_UPDATE_TICKET: ${N8N_WEBHOOK_UPDATE_TICKET}
      N8N_WEBHOOK_CLOSE_TICKET: ${N8N_WEBHOOK_CLOSE_TICKET}
      CORS_ORIGINS: ${CORS_ORIGINS}
    ports:
      - "${BACKEND_PORT:-9000}:5000"
    volumes:
      - backend_logs:/app/logs
    networks:
      - tickkk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Production Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-/api}
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-/api}
    ports:
      - "0.0.0.0:${FRONTEND_PORT:-9100}:3000"
    depends_on:
      - backend
    networks:
      - tickkk-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Production n8n
  n8n:
    image: n8nio/n8n:latest
    environment:
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      WEBHOOK_URL: ${N8N_WEBHOOK_URL}
      GENERIC_TIMEZONE: ${TIMEZONE:-UTC}
      # Production email configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      # Environment variables for workflows
      EMAIL_DOMAIN: ${EMAIL_DOMAIN}
      SUPPORT_TEAM_EMAIL: ${SUPPORT_TEAM_EMAIL}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "${N8N_PORT:-9300}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows:ro
    networks:
      - tickkk-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for production caching
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - tickkk-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  n8n_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  tickkk-network:
    driver: bridge